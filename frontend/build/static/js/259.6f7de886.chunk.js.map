{"version":3,"file":"static/js/259.6f7de886.chunk.js","mappings":"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","sources":["gamePlugin/games/9Players/GameBoard.jsx","gamePlugin/games/9Players/Main.jsx","gamePlugin/games/9Players/Player.jsx","gamePlugin/games/9Players/assets/svgs.jsx","gamePlugin/games/9Players/constants/constants.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { initialPlayerPositions, initialState, edges, pattern } from './constants/constants.jsx'\r\n\r\nconst GameBoard = ({ players, setPlayers, resignRequest, onResignHandled }) => {\r\n  const [playerState, setPlayerState] = useState(initialState)\r\n  const [playerPositions, setPlayerPositions] = useState(initialPlayerPositions)\r\n  const [gamePhase, setGamePhase] = useState('initialize')\r\n  const [isAdvantage, setIsAdvantage] = useState(false)\r\n  const [lastMove, setLastMove] = useState(-1)\r\n  const [isPlayerTouchedForMove, setIsPlayerTouchedForMove] = useState(false)\r\n  const [winner, setWinner] = useState(null)\r\n  const [infoMessage, setInfoMessage] = useState('')\r\n  const showMessage = (msg) => {\r\n    setInfoMessage(msg)\r\n    window.clearTimeout(showMessage._t)\r\n    showMessage._t = window.setTimeout(() => setInfoMessage(''), 1500)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Transition from placement to move phase strictly after both placed all 9\r\n    if (players[0].placedPlayer === 9 && players[1].placedPlayer === 9 && gamePhase !== 'end') {\r\n      setGamePhase('start')\r\n    }\r\n    // End game when a player is reduced to 2 pieces (retired >= 7)\r\n    if ((players[0].retirePlayer >= 7 || players[1].retirePlayer >= 7) && gamePhase !== 'end') {\r\n      const p1Remaining = 9 - players[0].retirePlayer\r\n      const p2Remaining = 9 - players[1].retirePlayer\r\n      if (p1Remaining <= 2) setWinner('Player 2')\r\n      if (p2Remaining <= 2) setWinner('Player 1')\r\n      setGamePhase('end')\r\n    }\r\n  }, [players])\r\n\r\n  useEffect(() => {\r\n    if (isAdvantage) {\r\n      populatePosiblePlayerRemove(false)\r\n      setSecondPlayerTurn()\r\n    }\r\n  }, [isAdvantage])\r\n\r\n  const getHorizontalRow = (configuration, rowIndex) => {\r\n    var margin = ''\r\n    if (rowIndex === 3) {\r\n      margin = (4 * 100) / 6 + '%'\r\n      return (\r\n        <div key={`h1x-${rowIndex}`}>\r\n          <div\r\n            key={`h1-${rowIndex}`}\r\n            className=\"absolute left-0 h-px bg-black\"\r\n            style={{\r\n              top: `${(rowIndex * 100) / 6}%`,\r\n              width: `${configuration[0]}%`,\r\n              marginLeft: '0px',\r\n            }}\r\n          />\r\n          <div\r\n            key={`h2-${rowIndex}-1`}\r\n            className=\"absolute left-0 h-px bg-black\"\r\n            style={{\r\n              top: `${(rowIndex * 100) / 6}%`,\r\n              width: `${configuration[0]}%`,\r\n              marginLeft: margin,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (rowIndex < 3) {\r\n      margin = (rowIndex * 100) / 6 + '%'\r\n    } else {\r\n      margin = ((6 - rowIndex) * 100) / 6 + '%'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={`h-${rowIndex}`}\r\n        className=\"absolute left-0 h-px bg-black\"\r\n        style={{\r\n          top: `${(rowIndex * 100) / 6}%`,\r\n          width: `${configuration[0]}%`,\r\n          marginLeft: margin,\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  const getVerticalRow = (configuration, rowIndex) => {\r\n    var margin = ''\r\n    if (rowIndex === 3) {\r\n      margin = (4 * 100) / 6 + '%'\r\n      return (\r\n        <div key={`v1x-${rowIndex}`}>\r\n          <div\r\n            key={`v1-${rowIndex}`}\r\n            className=\"absolute top-0 w-px bg-black\"\r\n            style={{\r\n              left: `${(rowIndex * 100) / 6}%`,\r\n              height: `${configuration[0]}%`,\r\n              marginTop: '0px',\r\n            }}\r\n          />\r\n          <div\r\n            key={`v2-${rowIndex}-1`}\r\n            className=\"absolute top-0 w-px bg-black\"\r\n            style={{\r\n              left: `${(rowIndex * 100) / 6}%`,\r\n              height: `${configuration[0]}%`,\r\n              marginTop: margin,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (rowIndex < 3) {\r\n      margin = (rowIndex * 100) / 6 + '%'\r\n    } else {\r\n      margin = ((6 - rowIndex) * 100) / 6 + '%'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={`v-${rowIndex}`}\r\n        className=\"absolute top-0 w-px bg-black\"\r\n        style={{\r\n          left: `${(rowIndex * 100) / 6}%`,\r\n          height: `${configuration[0]}%`,\r\n          marginTop: margin,\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  // New function to render circles at intersections\r\n  const getCirclesAtIntersections = () => {\r\n    return playerState.map((data, index) => {\r\n      var color = ''\r\n      switch (data.player) {\r\n        case 0: {\r\n          color = 'bg-slate-300'\r\n          break\r\n        }\r\n        case 1:\r\n        case 2: {\r\n          color = 'bg-transparent'\r\n          break\r\n        }\r\n        case 3: {\r\n          color = 'bg-green-800'\r\n          break\r\n        }\r\n        case 4: {\r\n          color = 'bg-red-600'\r\n          break\r\n        }\r\n        default: {\r\n          color = 'bg-black'\r\n        }\r\n      }\r\n\r\n      if (data.isRemovable && data.player !== 0) {\r\n        color = 'bg-red-600'\r\n      }\r\n      if (data.isMovable) {\r\n        color = 'bg-green-800'\r\n      }\r\n\r\n      return (\r\n        <div\r\n          key={`circle-${data.row}-${data.col}-${index}`}\r\n          className={`absolute sm:w-[16px] md:w-[20px] sm:h-[16px] md:h-[20px] rounded-full cursor-pointer ${color} \r\n                                transition-all duration-1000 ease-in-out`} // Transition on all properties\r\n          style={{\r\n            top: `${(data.row * 100) / 6}%`,\r\n            left: `${(data.col * 100) / 6}%`,\r\n            transform: 'translate(-50%, -50%)',\r\n            zIndex: 100,\r\n          }}\r\n          onClick={() => {\r\n            handlePlayerClick(data, index)\r\n          }}\r\n        ></div>\r\n      )\r\n    })\r\n  }\r\n  const getPlayersCircles = () => {\r\n    return playerPositions.map((circle, index) => {\r\n      var color = players[index > 8 ? 1 : 0].color\r\n      if (!circle.isRemoved) {\r\n        return (\r\n          <div\r\n            key={`playerCircle-${index}`}\r\n            className={`playersCircle sm:w-[16px] md:w-[20px] sm:h-[16px] md:h-[20px] absolute rounded-full cursor-pointer ${color} \r\n                                    transition-all duration-1000 ease-in-out  ${circle.isBind && playerState[circle.index].isSelectedForMove ? 'rounded shadow-cyan-500/50 shadow-xl animate-bounce' : 'shadow-sm'} `} // Transition for all properties\r\n            style={{\r\n              top: `${parseFloat(circle.top)}%`, // Ensure top is percentage\r\n              left: `${parseFloat(circle.left)}%`, // Ensure left is percentage\r\n              transform: 'translate(-50%, -50%)',\r\n              zIndex: 99,\r\n            }}\r\n          ></div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const populatePosibleMoves = (data, index) => {\r\n    //[0, 0, 0]\r\n    if (data.player === 0 || data.player === 3) {\r\n      return //returning for empty\r\n    }\r\n    if (data.isSelectedForMove) {\r\n      clearPosibleMoves()\r\n      return\r\n    }\r\n    var points_to_highlight = edges[index].filter((p) => {\r\n      return playerState[p].player === 0\r\n    })\r\n    if (points_to_highlight && points_to_highlight.length > 0) {\r\n      //only populate if player is not blocked\r\n      setIsPlayerTouchedForMove(true)\r\n      setPlayerState((old) => {\r\n        old = structuredClone(old)\r\n        for (var i = 0; i < points_to_highlight.length; i++) {\r\n          old[points_to_highlight[i]].isMovable = true\r\n        }\r\n        old[index].isSelectedForMove = true\r\n        return old\r\n      })\r\n    } else {\r\n      // Player is blocked\r\n      showMessage('Selected piece is blocked')\r\n    }\r\n  }\r\n  const clearPosibleMoves = () => {\r\n    setIsPlayerTouchedForMove(false)\r\n    setPlayerState((old) => {\r\n      old = old.map((p) => {\r\n        if (p.isMovable) {\r\n          p.isMovable = false\r\n        }\r\n        p.isSelectedForMove = false\r\n        return p\r\n      })\r\n      return old\r\n    })\r\n  }\r\n\r\n  const populatePosiblePlayerRemove = (isRevert) => {\r\n    // Opponent pieces are candidates for removal\r\n    var opponentPlayer = players[0].isActive ? 2 : 1 // 1 for player1, 2 for player2\r\n    if (isRevert) {\r\n      setPlayerState((old) => {\r\n        return old.map((o) => {\r\n          o.isRemovable = false\r\n          return o\r\n        })\r\n      })\r\n      return\r\n    }\r\n    // Function to find all triplet members for a given player\r\n    const findAllTriplets = (state, player) => {\r\n      let triplets = []\r\n      // Find row triplets\r\n      for (let row = 0; row <= 6; row++) {\r\n        const rowElements = state.filter((c) => c.row === row)\r\n        const sorted = rowElements.slice().sort((a, b) => a.col - b.col)\r\n        for (let i = 0; i <= sorted.length - 3; i++) {\r\n          const a = sorted[i], b = sorted[i + 1], c = sorted[i + 2]\r\n          if (a.player === player && a.player === b.player && a.player === c.player) {\r\n            triplets.push(a, b, c)\r\n          }\r\n        }\r\n      }\r\n      // Find column triplets\r\n      for (let col = 0; col <= 6; col++) {\r\n        const colElements = state.filter((c) => c.col === col)\r\n        const sorted = colElements.slice().sort((a, b) => a.row - b.row)\r\n        for (let i = 0; i <= sorted.length - 3; i++) {\r\n          const a = sorted[i], b = sorted[i + 1], c = sorted[i + 2]\r\n          if (a.player === player && a.player === b.player && a.player === c.player) {\r\n            triplets.push(a, b, c)\r\n          }\r\n        }\r\n      }\r\n      return triplets\r\n    }\r\n    // Triplets for the opponent\r\n    const tripletMembers = findAllTriplets(playerState, opponentPlayer)\r\n    const tripletIndexes = new Set(tripletMembers.map(t => t.index))\r\n    const opponentPieces = playerState.filter((c) => c.player === opponentPlayer)\r\n    const removable = opponentPieces.filter((c) => !tripletIndexes.has(c.index))\r\n    const targets = removable.length > 0 ? removable : opponentPieces\r\n\r\n    setPlayerState((old) => {\r\n      old = structuredClone(old)\r\n      targets.forEach((p) => {\r\n        old[p.index].isRemovable = true\r\n      })\r\n      return old\r\n    })\r\n  }\r\n\r\n  const removeSpecificPlayer = (index) => {\r\n    setPlayerState((old) => {\r\n      old = structuredClone(old)\r\n      old[index].player = 0\r\n      return old\r\n    })\r\n    setPlayerPositions((old) => {\r\n      old = structuredClone(old)\r\n      for (var counter = 0; counter < 18; counter++) {\r\n        if (old[counter].index === index) {\r\n          old[counter].isRemoved = true\r\n        }\r\n      }\r\n      return old\r\n    })\r\n\r\n    setPlayers((old) => {\r\n      old = structuredClone(old)\r\n      for (var i = 0; i < old.length; i++) {\r\n        if (!old[i].isActive) {\r\n          old[i].retirePlayer += 1\r\n        }\r\n      }\r\n      return old\r\n    })\r\n    setIsAdvantage(false)\r\n    populatePosiblePlayerRemove(true)\r\n    setSecondPlayerTurn()\r\n  }\r\n  const handlePlayerChange = (data, index) => {\r\n    var playerIndexToMove = playerState.findIndex((p) => p.isSelectedForMove) // Find the active player to move\r\n\r\n    if (playerIndexToMove === -1) {\r\n      return\r\n    }\r\n    setPlayerState((prevState) => {\r\n      const newState = [...prevState]\r\n      newState[playerIndexToMove].player = 0 // Clear old position\r\n      if (players[0].isActive) {\r\n        newState[index].player = 1 // Set new position\r\n      } else {\r\n        newState[index].player = 2 // Set new position\r\n      }\r\n      return newState\r\n    })\r\n\r\n    setPlayerPositions((old) => {\r\n      old = structuredClone(old)\r\n\r\n      for (var counter = 0; counter < 18; counter++) {\r\n        if (old[counter].index === playerIndexToMove) {\r\n          old[counter].top = `${(data.row * 100) / 6}%`\r\n          old[counter].left = `${(data.col * 100) / 6}%`\r\n        }\r\n      }\r\n      return old\r\n    })\r\n\r\n    clearPosibleMoves()\r\n    // After a move, check if opponent has any valid moves; if none, current player wins\r\n    setSecondPlayerTurn()\r\n  }\r\n  const setSecondPlayerTurn = () => {\r\n    setPlayers((old) => {\r\n      old = structuredClone(old)\r\n      old[0].isActive = !old[0].isActive\r\n      old[1].isActive = !old[1].isActive\r\n      return old\r\n    })\r\n  }\r\n\r\n  const handlePlayerClick = (data, index) => {\r\n    if (gamePhase === 'end') {\r\n      return\r\n    }\r\n\r\n    if (isAdvantage) {\r\n      if (data.isRemovable === true) {\r\n        setLastMove(index)\r\n        removeSpecificPlayer(index)\r\n        return\r\n      }\r\n      return\r\n    }\r\n\r\n    if (isPlayerTouchedForMove && !data.isMovable) {\r\n      showMessage('Choose a highlighted spot')\r\n      return\r\n    }\r\n\r\n    if (gamePhase === 'initialize') {\r\n      if (data.player > 0) {\r\n        showMessage('Spot occupied')\r\n        return\r\n      }\r\n\r\n      setLastMove(index)\r\n      var nextToInsert = players[0].isActive ? 0 : 9\r\n      setPlayerPositions((old) => {\r\n        old = structuredClone(old)\r\n        while (old[nextToInsert].isBind) {\r\n          nextToInsert++\r\n        }\r\n        old[nextToInsert].index = index\r\n        old[nextToInsert].isBind = true\r\n        old[nextToInsert].top = `${(data.row * 100) / 6}%`\r\n        old[nextToInsert].left = `${(data.col * 100) / 6}%`\r\n        return old\r\n      })\r\n\r\n      setPlayerState((old) => {\r\n        var activePlayer = players[0].isActive ? 1 : 2\r\n        old = structuredClone(old)\r\n        old[index].player = activePlayer\r\n        return old\r\n      })\r\n      setPlayers((old) => {\r\n        var activePlayer = players[0].isActive ? 0 : 1\r\n        old = structuredClone(old)\r\n        old[activePlayer].placedPlayer += 1\r\n        return old\r\n      })\r\n      setSecondPlayerTurn()\r\n    } else if (gamePhase === 'start') {\r\n      if (data.isMovable) {\r\n        setLastMove(index)\r\n        handlePlayerChange(data, index)\r\n      } else if ((data.player === 1 || data.player === 2) && players[data.player - 1].isActive) {\r\n        populatePosibleMoves(data, index)\r\n      } else if (data.player === 0) {\r\n        showMessage('Select your piece to move')\r\n      } else {\r\n        showMessage('Not your piece')\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    var isAdvantage = checkPlayerAdvantage()\r\n    setIsAdvantage(isAdvantage)\r\n  }, [playerState])\r\n\r\n  const checkPlayerAdvantage = () => {\r\n    for (let row = 0; row <= 6; row++) {\r\n      const rowElements = playerState.filter((child) => child.row === row) // Get all elements in the same row\r\n      for (let i = 0; i <= rowElements.length - 3; i += 3) {\r\n        if (rowElements[i].player !== 0 && rowElements[i].player === rowElements[i + 1].player && rowElements[i].player === rowElements[i + 2].player) {\r\n          if ([rowElements[i].index, rowElements[i + 1].index, rowElements[i + 2].index].includes(lastMove)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let col = 0; col <= 6; col++) {\r\n      const colElements = playerState.filter((child) => child.col === col) // Get all elements in the same column\r\n      for (let i = 0; i <= colElements.length - 3; i += 3) {\r\n        if (colElements[i].player !== 0 && colElements[i].player === colElements[i + 1].player && colElements[i].player === colElements[i + 2].player) {\r\n          if ([colElements[i].index, colElements[i + 1].index, colElements[i + 2].index].includes(lastMove)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Determine if the specified player has any legal moves (used for stalemate detection)\r\n  const hasAnyValidMove = (playerNumber) => {\r\n    // For each piece of playerNumber, see if any adjacent edge is empty\r\n    for (let i = 0; i < playerState.length; i++) {\r\n      if (playerState[i].player === playerNumber) {\r\n        const adj = edges[i] || []\r\n        if (adj.some((idx) => playerState[idx].player === 0)) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  // React to resignRequest from parent\r\n  useEffect(() => {\r\n    if (!resignRequest || gamePhase === 'end') return\r\n    const resignedPlayer = resignRequest === 'p1' ? 'Player 1' : 'Player 2'\r\n    const winnerPlayer = resignRequest === 'p1' ? 'Player 2' : 'Player 1'\r\n    setWinner(winnerPlayer)\r\n    setGamePhase('end')\r\n    onResignHandled && onResignHandled()\r\n  }, [resignRequest])\r\n\r\n  // After each playerState change in move phase, check stalemate for next player\r\n  useEffect(() => {\r\n    if (gamePhase !== 'start') return\r\n    const nextPlayer = players[0].isActive ? 1 : 2\r\n    if (!hasAnyValidMove(nextPlayer)) {\r\n      setWinner(nextPlayer === 1 ? 'Player 2' : 'Player 1')\r\n      setGamePhase('end')\r\n    }\r\n  }, [playerState, gamePhase, players])\r\n\r\n  // Warn before leaving active game\r\n  useEffect(() => {\r\n    const placed = (players?.[0]?.placedPlayer || 0) + (players?.[1]?.placedPlayer || 0)\r\n    const shouldWarn = (gamePhase === 'initialize' || gamePhase === 'start') && placed > 0\r\n    if (!shouldWarn) return\r\n    const handler = (e) => {\r\n      e.preventDefault()\r\n      e.returnValue = ''\r\n    }\r\n    window.addEventListener('beforeunload', handler)\r\n    return () => window.removeEventListener('beforeunload', handler)\r\n  }, [gamePhase, players])\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col mx-auto py-2 px-3 justify-center\">\r\n      {/* Grid container with relative positioning */}\r\n      <div className=\"relative sm:max-h-[260px] sm:max-w-[260px] sm:min-h-[240px] sm:min-w-[240px]  md:max-h-[520px] md:max-w-[520px] md:min-h-[420px] md:min-w-[420px] mx-auto \">\r\n        {/* Horizontal lines */}\r\n        {pattern.map((conf, rowIndex) => getHorizontalRow(conf, rowIndex))}\r\n\r\n        {/* Vertical lines */}\r\n        {pattern.map((conf, rowIndex) => getVerticalRow(conf, rowIndex))}\r\n\r\n        {/* Circles at intersections */}\r\n        {getCirclesAtIntersections()}\r\n\r\n        {getPlayersCircles()}\r\n\r\n        {gamePhase === 'end' && (\r\n          <div\r\n            key={`win-div-container`}\r\n            className={`absolute rounded-2xl cursor-pointer bg-white shadow-2xl border-2 border-green-400 flex flex-col justify-center items-center p-8`}\r\n            style={{\r\n              width: '280px',\r\n              minHeight: '250px',\r\n              top: `50%`,\r\n              left: `50%`,\r\n              transform: 'translate(-50%, -50%)',\r\n              zIndex: 1000,\r\n            }}\r\n          >\r\n            <div className=\"text-6xl mb-4\">🏆</div>\r\n            <h2 className=\"text-3xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent mb-2\">\r\n              Game Over!\r\n            </h2>\r\n            <p className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n              {(winner || (players[0].retirePlayer > players[1].retirePlayer ? 'Player 2' : 'Player 1'))} Wins!\r\n            </p>\r\n            <button \r\n              className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 transform hover:scale-105 shadow-lg\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              Play Again\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {infoMessage && (\r\n        <div className=\"mt-3 text-center text-sm text-gray-700 bg-yellow-50 border border-yellow-200 rounded-md px-3 py-2\">\r\n          {infoMessage}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameBoard\r\n","import React, { useState, useEffect } from 'react'\r\nimport GameBoard from './GameBoard'\r\nimport Player from './Player'\r\nimport ConfirmModal from './components/ConfirmModal'\r\nimport { useGameContext } from '../../context/GameContext'\r\n\r\nexport default function Main({gameConfiguration}) {\r\n  const [players, setPlayers] = useState([\r\n    { name: 'player 1', isActive: true, color: 'bg-blue-500', placedPlayer: 0, retirePlayer: 0 },\r\n    { name: 'player 2', isActive: false, color: 'bg-yellow-300', placedPlayer: 0, retirePlayer: 0 },\r\n  ])\r\n  const { setShouldBlockNavigation, setNavigationWarningConfig } = useGameContext()\r\n  const currentPlayer = players.find(p => p.isActive);\r\n  const gamePhase = players[0].placedPlayer === 9 && players[1].placedPlayer === 9 ? 'playing' : 'placing';\r\n  const [resignRequest, setResignRequest] = useState(null)\r\n  const [showOptOutModal, setShowOptOutModal] = useState(false)\r\n  \r\n  // Set custom navigation warning message for this game\r\n  useEffect(() => {\r\n    setNavigationWarningConfig({\r\n      title: 'Leave 9 VS 9 Game?',\r\n      message: 'You have an active game in progress. Are you sure you want to leave? Your progress will be lost.',\r\n      confirmText: 'Leave Game',\r\n      cancelText: 'Stay'\r\n    })\r\n  }, [setNavigationWarningConfig])\r\n  \r\n  // Component tells safeNavigate to block navigation when game is active\r\n  useEffect(() => {\r\n    const placedCount = players[0].placedPlayer + players[1].placedPlayer\r\n    const isGameEnded = players[0].retirePlayer >= 7 || players[1].retirePlayer >= 7\r\n    const shouldBlock = placedCount > 0 && !isGameEnded\r\n    \r\n    setShouldBlockNavigation(shouldBlock)\r\n    \r\n    // Cleanup: unblock navigation when component unmounts\r\n    return () => {\r\n      setShouldBlockNavigation(false)\r\n    }\r\n  }, [players, setShouldBlockNavigation])\r\n  \r\n  const handleOptOut = () => {\r\n    setShowOptOutModal(true)\r\n  }\r\n  \r\n  const confirmOptOut = () => {\r\n    setResignRequest(players[0].isActive ? 'p1' : 'p2')\r\n    setShowOptOutModal(false)\r\n  }\r\n  \r\n  const onResignHandled = () => setResignRequest(null)\r\n\r\n  return (\r\n    <div className=\"justify-between flex-grow max-h-full bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex flex-col\">\r\n      <div className=\"py-4 px-3 sm:px-4 flex flex-col\">\r\n        {/* Header Section */}\r\n        <div className=\"max-w-6xl mx-auto mb-6\">\r\n          <h1 className=\"text-2xl sm:text-4xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent mb-1 sm:mb-2\">\r\n            {gameConfiguration && gameConfiguration.displayName}\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Game Board Container */}\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <GameBoard players={players} setPlayers={setPlayers} resignRequest={resignRequest} onResignHandled={onResignHandled} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Combined Bottom Status Bar */}\r\n      <div className=\"bg-white border-t border-gray-200 shadow-lg\">\r\n        <div className=\"px-2 sm:px-4 py-2 sm:py-2\">\r\n          {/* Desktop: Turn indicator on left, players side by side */}\r\n          <div className=\"hidden md:flex flex-col justify-center items-center gap-4\">\r\n            {/* Turn Indicator */}\r\n            <div className=\"flex-shrink-0 flex items-center gap-2 px-3 py-2 bg-blue-50 rounded-lg\">\r\n              <div className={`w-3 h-3 rounded-full ${currentPlayer?.color}`}></div>\r\n              <span className=\"font-semibold text-sm text-gray-800\">\r\n                {currentPlayer?.name}'s Turn\r\n              </span>\r\n              <span className=\"text-xs text-gray-600 px-2 py-0.5 bg-white rounded-full\">\r\n                {gamePhase === 'placing' ? 'Placing' : 'Moving'}\r\n              </span>\r\n              <button\r\n                onClick={handleOptOut}\r\n                className=\"ml-4 px-3 py-2 rounded-lg text-sm font-medium text-red-600 bg-red-50 hover:bg-red-100 transition-colors\"\r\n              >\r\n                Opt Out\r\n              </button>\r\n            </div>\r\n\r\n            {/* Player Cards - Side by side */}\r\n            <div className=\"flex gap-3 flex-grow\">\r\n              <Player user1={players[0]} user2={players[1]} possition={'left'} />\r\n              <Player user1={players[1]} user2={players[0]} possition={'right'} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Mobile: Turn indicator on top, players stacked */}\r\n          <div className=\"md:hidden space-y-2\">\r\n            {/* Turn Indicator */}\r\n            <div className=\"flex items-center justify-center gap-2 px-3 py-2 bg-blue-50 rounded-lg\">\r\n              <div className={`w-3 h-3 rounded-full ${currentPlayer?.color}`}></div>\r\n              <span className=\"font-semibold text-sm text-gray-800\">\r\n                {currentPlayer?.name}'s Turn\r\n              </span>\r\n              <span className=\"text-xs text-gray-600 px-2 py-0.5 bg-white rounded-full\">\r\n                {gamePhase === 'placing' ? 'Placing' : 'Moving'}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Player Cards - Stacked vertically */}\r\n            <div className=\"flex flex-col gap-2\">\r\n              <Player user1={players[0]} user2={players[1]} possition={'left'} />\r\n              <Player user1={players[1]} user2={players[0]} possition={'right'} />\r\n                  <div className=\"flex justify-center\">\r\n                    <button\r\n                      onClick={handleOptOut}\r\n                      className=\"px-3 py-2 rounded-lg text-sm font-medium text-red-600 bg-red-50 hover:bg-red-100 transition-colors\"\r\n                    >\r\n                      Opt Out\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Opt-Out Confirmation Modal */}\r\n      <ConfirmModal\r\n        isOpen={showOptOutModal}\r\n        onClose={() => setShowOptOutModal(false)}\r\n        onConfirm={confirmOptOut}\r\n        title=\"Opt Out?\"\r\n        message={`${players[0].isActive ? 'Player 1' : 'Player 2'} - Are you sure you want to opt out? This will end the game.`}\r\n        confirmText=\"Yes, Opt Out\"\r\n        cancelText=\"Cancel\"\r\n        type=\"warning\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { UserIcon } from './assets/svgs';\r\n\r\n\r\nexport default function Player(props) {\r\n    const { name, isActive, color, placedPlayer } = props.user1;\r\n    const possition = props.possition;\r\n    const availablePieces = 9 - props.user1.retirePlayer;\r\n \r\n    return (\r\n        <div className={`flex items-center gap-3 p-3 bg-white rounded-lg shadow-sm border-2 transition-all ${isActive ? 'border-blue-400 shadow-md' : 'border-gray-200'}`}>\r\n            {/* Player Avatar */}\r\n            <div className='flex-shrink-0'>\r\n                <div className={`w-12 h-12 rounded-full flex items-center justify-center transition-all duration-300 ${isActive ? 'scale-110 shadow-md shadow-blue-500/50' : 'scale-100'}`}>\r\n                    <UserIcon color={color} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Player Info - Horizontal Layout */}\r\n            <div className='flex items-center gap-4 flex-grow'>\r\n                <div className='flex-1'>\r\n                    <h3 className={`font-bold text-sm capitalize ${isActive ? 'text-blue-600' : 'text-gray-700'}`}>\r\n                        {name}\r\n                        {isActive && <span className=\"ml-2 text-xs bg-blue-100 text-blue-700 px-2 py-0.5 rounded-full\">Active</span>}\r\n                    </h3>\r\n                    <div className=\"flex items-center gap-2 mt-1\">\r\n                        <span className=\"text-xs text-gray-500\">Available:</span>\r\n                        <span className={`text-sm font-bold ${isActive ? 'text-blue-600' : 'text-gray-700'}`}>\r\n                            {availablePieces}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Retired Pieces - Horizontal */}\r\n                <div className='text-right'>\r\n                    <p className=\"text-xs text-gray-500 mb-1\">Retired</p>\r\n                    <div className=\"flex items-center gap-1\">\r\n                        <span className=\"text-xs font-semibold text-gray-700\">{props.user2.retirePlayer}</span>\r\n                        <div className=\"w-1.5 h-1.5 rounded-full bg-gray-400\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const UserIcon = (props) => {\r\n    return (<svg className=\"w-16 h-16 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path fillRule=\"evenodd\" d=\"M12 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-2 9a4 4 0 0 0-4 4v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a4 4 0 0 0-4-4h-4Z\" clipRule=\"evenodd\" />\r\n    </svg>)\r\n}\r\n","export const pattern = [\r\n  [1 * 100, 0],\r\n  [(4 / 6) * 100, 0],\r\n  [(2 / 6) * 100, 0],\r\n  [(2 / 6) * 100, 1],\r\n  [(2 / 6) * 100, 0],\r\n  [(4 / 6) * 100, 0],\r\n  [1 * 100, 0],\r\n]\r\n\r\nexport const initialState = [\r\n    { row: 0, col: 0, player: 0, isSelectedForMove: false, index: 0, isRemovable: false, isMovable: false },\r\n    { row: 0, col: 3, player: 0, isSelectedForMove: false, index: 1, isRemovable: false, isMovable: false },\r\n    { row: 0, col: 6, player: 0, isSelectedForMove: false, index: 2, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 1, player: 0, isSelectedForMove: false, index: 3, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 3, player: 0, isSelectedForMove: false, index: 4, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 5, player: 0, isSelectedForMove: false, index: 5, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 2, player: 0, isSelectedForMove: false, index: 6, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 3, player: 0, isSelectedForMove: false, index: 7, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 4, player: 0, isSelectedForMove: false, index: 8, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 0, player: 0, isSelectedForMove: false, index: 9, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 1, player: 0, isSelectedForMove: false, index: 10, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 2, player: 0, isSelectedForMove: false, index: 11, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 4, player: 0, isSelectedForMove: false, index: 12, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 5, player: 0, isSelectedForMove: false, index: 13, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 6, player: 0, isSelectedForMove: false, index: 14, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 2, player: 0, isSelectedForMove: false, index: 15, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 3, player: 0, isSelectedForMove: false, index: 16, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 4, player: 0, isSelectedForMove: false, index: 17, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 1, player: 0, isSelectedForMove: false, index: 18, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 3, player: 0, isSelectedForMove: false, index: 19, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 5, player: 0, isSelectedForMove: false, index: 20, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 0, player: 0, isSelectedForMove: false, index: 21, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 3, player: 0, isSelectedForMove: false, index: 22, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 6, player: 0, isSelectedForMove: false, index: 23, isRemovable: false, isMovable: false },\r\n  ];\r\n  \r\n\r\nexport const initialPlayerPositions = [\r\n  // First 9 players (left side, with left set to -20%)\r\n  { top: '10%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '18.67%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '27.34%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '36.01%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '44.68%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '53.35%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '62.02%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '70.69%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '79.36%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n\r\n  // Next 9 players (right side, with left set to 120%)\r\n  { top: '10%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '18.67%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '27.34%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '36.01%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '44.68%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '53.35%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '62.02%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '70.69%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '79.36%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n]\r\n\r\n//0-row, 1-col, 2-player-decide, 3-track-for-player-to-move-when-select-points, 4-index, 5-highlite-for-player-remove\r\n\r\nexport const edges = [\r\n  [1, 9],\r\n  [0, 2, 4],\r\n  [1, 14],\r\n  [4, 10],\r\n  [1, 3, 5, 7],\r\n  [4, 13],\r\n  [7, 11],\r\n  [4, 6, 8],\r\n  [7, 12],\r\n  [0, 10, 21],\r\n  [3, 9, 11, 18],\r\n  [6, 10, 15],\r\n  [8, 13, 17],\r\n  [5, 12, 14, 20],\r\n  [2, 13, 23],\r\n  [11, 16],\r\n  [15, 17, 19],\r\n  [12, 16],\r\n  [10, 19],\r\n  [16, 18, 20, 22],\r\n  [13, 19],\r\n  [9, 22],\r\n  [19, 21, 23],\r\n  [14, 22],\r\n]"],"names":["_ref","players","setPlayers","resignRequest","onResignHandled","playerState","setPlayerState","useState","initialState","playerPositions","setPlayerPositions","initialPlayerPositions","gamePhase","setGamePhase","isAdvantage","setIsAdvantage","lastMove","setLastMove","isPlayerTouchedForMove","setIsPlayerTouchedForMove","winner","setWinner","infoMessage","setInfoMessage","showMessage","msg","window","clearTimeout","_t","setTimeout","useEffect","placedPlayer","retirePlayer","p1Remaining","p2Remaining","populatePosiblePlayerRemove","setSecondPlayerTurn","clearPosibleMoves","old","map","p","isMovable","isSelectedForMove","isRevert","opponentPlayer","isActive","o","isRemovable","tripletMembers","findAllTriplets","state","player","triplets","row","sorted","filter","c","slice","sort","a","b","col","i","length","push","tripletIndexes","Set","t","index","opponentPieces","removable","has","targets","structuredClone","forEach","handlePlayerClick","data","counter","isRemoved","removeSpecificPlayer","nextToInsert","isBind","top","concat","left","activePlayer","handlePlayerChange","playerIndexToMove","findIndex","prevState","newState","populatePosibleMoves","points_to_highlight","edges","checkPlayerAdvantage","rowElements","child","includes","colElements","nextPlayer","playerNumber","some","idx","hasAnyValidMove","_players$","_players$2","placed","handler","e","preventDefault","returnValue","addEventListener","removeEventListener","_jsxs","className","children","pattern","conf","rowIndex","getHorizontalRow","configuration","margin","_jsx","style","width","marginLeft","getVerticalRow","height","marginTop","color","transform","zIndex","onClick","circle","parseFloat","minHeight","location","reload","Main","gameConfiguration","name","setShouldBlockNavigation","setNavigationWarningConfig","useGameContext","currentPlayer","find","setResignRequest","showOptOutModal","setShowOptOutModal","title","message","confirmText","cancelText","placedCount","isGameEnded","handleOptOut","displayName","GameBoard","Player","user1","user2","possition","ConfirmModal","isOpen","onClose","onConfirm","confirmOptOut","type","props","availablePieces","UserIcon","xmlns","fill","viewBox","fillRule","d","clipRule"],"sourceRoot":""}